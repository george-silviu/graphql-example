type Query {
  orders: [Order]
}

type Order {
  date: String!
  subtotal: Float
  items: [OrderItem]
}

type OrderItem {
  product: Product!
  quantity: Int!
}

# const schema = new GraphQLSchema({
#   query: new GraphQLObjectType({
#     name: "Query",
#     fields: {
#       orders: {
#         type: new GraphQLList(Order),
#       },
#     },
#   }),
# });

# const OrderItem = new GraphQLObjectType({
#   name: "OrderItem",
#   fields: {
#     product: {
#       type: new GraphQLNonNull(Product),
#     },
#     quantity: {
#       type: new GraphQLNonNull(GraphQLInt),
#     },
#   },
# });

# const Order = new GraphQLObjectType({
#   name: "Order",
#   fields: {
#     date: {
#       type: new GraphQLNonNull(GraphQLString),
#     },
#     subtotal: {
#       type: new GraphQLNonNull(GraphQLFloat),
#     },
#     items: {
#       type: new GraphQLList(OrderItem),
#     }
#   },
# });
